package org.pk.oauth2.client.resource;

import java.util.HashMap;
import java.util.Map;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.client.RestTemplate;

import com.fasterxml.jackson.databind.ObjectMapper;

@Controller
@RequestMapping("/client")
public class ClientResource {
	private String authCode = null;
	private String token = null;
	
	@GetMapping("/code")
	@ResponseBody
	public String authCode(@RequestParam("code") String authCode) {
		this.authCode = authCode;
		return authCode;
	}
	
	@GetMapping("/token")
	@ResponseBody
	public String token() {
		RestTemplate template = new RestTemplate();
		Map<String, String> request = new HashMap<>();
		request.put("grant_type", "authorization_code");
		request.put("client_id", "myclient");
		request.put("client_secret", "secret");
		request.put("code", authCode);
		request.put("redirect_uri", "http://localhost:8080/client/code");
		
		ObjectMapper mapper = new ObjectMapper();
		String requestJson = mapper.convertValue(request, String.class);
		
		System.out.println("*****" + requestJson);
		
		Map<String, String> response = template.postForEntity("http://localhost:8081/oauth/token", request, HashMap.class).getBody();
		this.token = response.get("access_token");
		return this.token;
	}
}